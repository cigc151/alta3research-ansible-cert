name: Ansible Lint Check

on:
  push:
    branches:
      - main # O la rama principal de tu repositorio, por ejemplo, 'master'
      - develop # Puedes añadir otras ramas si las usas

  pull_request:
    branches:
      - main # O la rama principal de tu repositorio
      - develop # Puedes añadir otras ramas si las usas

jobs:
  lint:
    runs-on: ubuntu-latest # Ejecuta el job en un entorno Ubuntu

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4 # Clona tu repositorio para que el linter pueda acceder a tus archivos Ansible

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Puedes especificar una versión de Python más específica si lo necesitas, por ejemplo, '3.9'

      - name: Instalar Ansible y Ansible Lint
        run: |
          python -m pip install --upgrade pip
          pip install ansible ansible-lint # Instala Ansible y ansible-lint
      - name: Realizar verificación de sintaxis de Ansible Playbooks
        run: |
          # Este paso verifica la sintaxis de los archivos YAML que podrían ser playbooks.
          # Es una verificación temprana para detectar errores básicos de sintaxis antes del linting completo.
          #
          # AJUSTA LAS RUTAS SEGÚN LA ESTRUCTURA DE TU PROYECTO:
          # - Si tu playbook principal es 'site.yml' en la raíz:
          #   ansible-playbook --syntax-check site.yml
          # - Si tienes varios playbooks en una carpeta 'playbooks/':
          #   for f in playbooks/*.yml; do ansible-playbook --syntax-check "$f"; done
          # - El siguiente comando intenta verificar todos los archivos .yml y .yaml
          #   en el directorio actual y en el subdirectorio 'playbooks/'.
          #   Nota: `ansible-playbook --syntax-check` fallará si el archivo no es un playbook válido
          #   (ej. un archivo de variables o un archivo de inventario sin la estructura de playbook).
          #   Esto es el comportamiento esperado si quieres que el workflow falle ante cualquier error de sintaxis.
          find . -maxdepth 2 -type f \( -name "*.yml" -o -name "*.yaml" \) -print0 | while IFS= read -r -d $'\0' file; do
            echo "Verificando sintaxis de: $file"
            ansible-playbook --syntax-check "$file" || { echo "Error de sintaxis en $file"; exit 1; }
          done

      - name: Ejecutar Ansible Lint con perfil de producción
        run: |
          ansible-lint --profile=production # Ejecuta el comando ansible-lint
        # Si ansible-lint encuentra errores, este paso fallará, y por lo tanto, el workflow fallará.
